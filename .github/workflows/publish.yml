name: Publish

on:
  push:
    branches: [ main ]

jobs:
  test:
    uses: ./.github/workflows/test.yml

  publish:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: write  # Add this to allow pushing tags
    
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}  # Explicitly use the token
        fetch-depth: 0  # Fetch all history for tags
    
    - name: Setup Python environment
      uses: ./.github/actions/setup-python
      with:
        python-version: "3.10"

    - name: Set RELEASE_FLAG
      run: echo "RELEASE_FLAG=${{ vars.RELEASE_FLAG }}" >> $GITHUB_ENV

    - name: Check if release is enabled
      if: env.RELEASE_FLAG == 'true'
      run: |
        echo "Release flag is enabled, proceeding with release steps"

    - name: Get version from pyproject.toml
      if: env.RELEASE_FLAG == 'true'
      run: |
        echo "VERSION=$(poetry version -s)" >> $GITHUB_ENV

    - name: Create and push tag
      if: env.RELEASE_FLAG == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        git tag -a "v${VERSION}" -m "Release v${VERSION}"
        git push origin "v${VERSION}"
    
    - name: Build and publish
      if: env.RELEASE_FLAG == 'true'
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        poetry build
        poetry publish

    - name: Create GitHub Release
      if: env.RELEASE_FLAG == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        name: Release v${{ env.VERSION }}
        files: |
          dist/*.whl
          dist/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
